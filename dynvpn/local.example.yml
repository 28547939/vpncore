
site_id: "host1"

# separate set of scripts for testing

#script_path: "./scripts"
script_path: "./test/scripts"

# path in the VPN jail where shared configuration and scripts can be found
#   (these are the scripts that are under the "jail" subdirectory of this
#   repository)
# this path is passed on to our shell scripts so that they can locate 
#   the jail-related scripts from within the jail
#
# this is the same variable as $LOCAL_VPN_DIR used by the 'jail' component
# of this repository
local_vpn_dir: "/mnt/vpn"


# how long to wait after launch until checking and acting on peer state
#start_delay: 10 TODO most likely removing this

# not yet implemented
#failed_retry_timeout: 120
#primary_override_online: False
#primary_restart_timer: 300

# VPN transitions to Offline status after being in Failed for this many seconds,
#   assuming another instance of the VPN has come online
#
# if none has, then we continue trying to transition to Offline every 
#   failed_status_timeout seconds 
#
# if set to 0, we never attempt to transition to Offline
failed_status_timeout: 0

# when a VPN is detected as having lost connectivity, retry this many times before giving
# up and switching it to Failed status
# "retry" means killing the existing VPN process and starting a new one
#
# 0 means no retries (go to Failed immediately)
# -1 means unlimited retries
failure_retries: 2


# when bringing a VPN connection online, the delay in seconds to wait before 
# checking whether it succeeded
# 
# generous settings for local_vpn_check_* probably make this unnecessary outside of a few seconds
online_check_delay: 2

# how many seconds to wait between attempts to reach a peer
pull_interval: 30
# how many seconds to wait without a response from a peer before marking the attempt as failed
pull_timeout: 10
# how many failed attempts to reach a peer before marking its site as Offline
# retries are performed immediately
# after it's marked Offline, subsequent pulls (checking for the site coming back online) will not retry
pull_retries: 1

# "replica mode" (could also be called "failover mode")
#   controls whether our local VPN instances can enter the Replica state
# can either be
# Auto:     VPNs will enter Replica automatically 
# Off:      VPNs will never be in Replica status- Offline instead; the set_replica HTTP call fails
# Manual:   VPNs will never enter Replica automatically, but they can be set to Replica using set_replica
replica_mode: "Manual"



# connectivity checks for local VPN containers which are in the Online state
# how often to check connectivity (seconds)
local_vpn_check_interval: 10
# how long to wait for connectivity check to succeed before assuming failure  (seconds)
local_vpn_check_timeout: 5
# in the case of failure, how many times to retry the check before actually registering
# the check as failed
# 0 means no retries - register failure on the first failure of the check
# >0: if the check succeeds within this number of retries, register the check as successfull
local_vpn_check_retries: 3


# timeout for asynchronous activity in general that isn't specified otherwise
# for example, activating/deactivating a VPN connection; any other internal 
#   async part of the program which has any chance of blocking indefinitely
default_timeout: 60

